{   
    "yaml.customTags": [
        "!And",
        "!And sequence",
        "!If",
        "!If sequence",
        "!Not",
        "!Not sequence",
        "!Equals",
        "!Equals sequence",
        "!Or",
        "!Or sequence",
        "!FindInMap",
        "!FindInMap sequence",
        "!Base64",
        "!Join",
        "!Join sequence",
        "!Cidr",
        "!Ref",
        "!Sub",
        "!Sub sequence",
        "!GetAtt",
        "!GetAZs",
        "!ImportValue",
        "!ImportValue sequence",
        "!Select",
        "!Select sequence",
        "!Split",
        "!Split sequence"
    ],
    "dev.containers.defaultExtensions": [
        "GitHub.copilot",
        "GitHub.vscode-pull-request-github",
        "eamodio.gitlens",
        "github.vscode-github-actions"
    ],

    // extension vim settings
    "vim.useSystemClipboard": true,
    "vim.incsearch": true,
    "vim.hlsearch": true,
    "vim.leader": "<space>",
    "vim.normalModeKeyBindingsNonRecursive": [
        // use builtin undo/redo because vim extension undo/redo is broken
        {
          "before": ["u"],
          "commands": [
            "undo"
          ]
        },
        {
          "before": ["<C-r>"],
          "commands": [
            "redo"
          ]
        },
        // swap : and ;
        {
          "before": [":"],
          "after": [";"]
        },
        {
          "before": [";"],
          "after": [":"]
        },
        {
          "before": ["<leader>", "n", "h"],
          "commands": [":noh"]
        },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
      {
        "before": ["J"],
        "commands": [
          "editor.action.moveLinesDownAction"
        ]
      },
      {
        "before": ["K"],
        "commands": [
          "editor.action.moveLinesUpAction"
        ]
      }
    ],

    // appearance settings
    "window.title": " ",
    "window.zoomLevel": 1,
    "window.nativeTabs": true,
    "window.density.editorTabHeight": "compact",
    "workbench.editor.pinnedTabsOnSeparateRow": true,
    "workbench.colorTheme": "Tokyo Night Storm",
    "terminal.integrated.fontFamily": "'HackGen Console', monospace",
    "editor.fontSize": 14,
    "editor.rulers": [80],
    "editor.fontFamily": "'FiraCode Nerd Font', monospace",
    "editor.lineNumbers": "off",
    "editor.cursorStyle": "block",
    "editor.cursorBlinking": "solid",
    "editor.minimap.enabled": false,
    "editor.stickyScroll.enabled": false,
    "explorer.openEditors.visible": 1,
    "window.commandCenter": false,
    "workbench.layoutControl.enabled": true,
    // "editor.experimentalGpuAcceleration": "on",
    "editor.smoothScrolling": false,
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    "editor.renderLineHighlight": "all",
    "editor.wordSegmenterLocales": ["ja", "en"],
    "editor.glyphMargin": false,
    "workbench.statusBar.visible": true,
    "terminal.integrated.fontSize": 14,
    
    // editor tab settings
    "workbench.editor.closeOnFileDelete": true,
    "workbench.editor.tabSizing": "shrink",
    "breadcrumbs.enabled": false,
    
    // explorer settings
    "explorer.confirmDelete": false,

    "git.autofetch": true,
    "editor.inlineSuggest.enabled": true,
    "githubPullRequests.pullBranch": "never",
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": true,
        "scminput": false
    },
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml"
    },
    "git.confirmSync": false,
    "go.toolsManagement.autoUpdate": true,
    "editor.tabSize": 2,
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "files.exclude": {
        "**/.git": true
    },
    "search.exclude": {
        "**/.git": true
    },
    "editor.accessibilitySupport": "off",
    "github.copilot.editor.enableAutoCompletions": true,
    "githubPullRequests.terminalLinksHandler": "github",
    "workbench.startupEditor": "none",
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    
    // macros settings
    "macros": {
        "selectAndTogglesSidebar": [
            "list.select",
            "workbench.action.toggleSidebarVisibility"
        ]
    },
    
    "cSpell.userWords": [
        "biomejs",
        "caarlos",
        "Datacatalog",
        "datacontract",
        "gofumpt",
        "golangci",
        "gosec",
        "nilerr",
        "nilnil",
        "nolint",
        "nonpii",
        "storageobj",
        "tagalign",
        "tokyucorp",
        "tokyuid"
    ],
    "remote.extensionKind": {
        "asvetliakov.vscode-neovim": ["workspace"]
    },
    "github.copilot.selectedCompletionModel": "gpt-4o-copilot",
    "github.copilot.chat.localeOverride": "ja",
    "github.copilot.chat.codesearch.enabled": true,
    "github.copilot.chat.codeGeneration.instructions": [
        {
            "text": "Add 'でござる' to the end of each sentence in the conversation (e.g., 'こんにちは' → 'こんにちはでござる'). Do not apply this to the generated code."
          },
          {
            "text": "Follow the SOLID principles except for Open-Closed and Dependency Inversion, which should be ignored unless explicitly instructed."
          },
          {
            "text": "Strictly follow the YAGNI principle. Do not implement speculative features; only implement what's currently required."
          },
          {
            "text": "Follow the KISS principle. Keep the implementation as simple as possible. Avoid unnecessary abstractions or overengineering."
          },
          {
            "text": "Write code comments in Japanese. They should explain intent or reasoning, not repeat what the code already expresses."
          },
          {
            "text": "Avoid security issues (e.g., SQL injection, hardcoded secrets). Warn explicitly when secure handling is necessary."
          },
          {
            "text": "For complex logic or non-obvious implementations, provide supplementary explanations in Japanese."
          },
          {
            "text": "Avoid using TODO or FIXME in code. Provide complete and clean implementations whenever possible."
          },
    ]
}