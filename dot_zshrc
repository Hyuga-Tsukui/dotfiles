# ─────────────────────────────────────────────
# 🧪 [ENVIRONMENT]
# ─────────────────────────────────────────────
export PATH="$HOME/.local/bin:$PATH"
export PATH="/opt/homebrew/opt/git/bin:$PATH" # use brew git

# ─────────────────────────────────────────────
# 🧪 [FUNCTIONS]
# ─────────────────────────────────────────────

_compinit() {
   local re_initialize=0
   for match in ${ZDOTDIR}/.zcompdump*(.Nmh+24); do
     re_initialize=1
     break
   done
   
   autoload -Uz compinit
   if [ "$re_initialize" -eq "1" ]; then
     compinit
     # update the timestamp on compdump file
     compdump
   else
     # omit the check for new functions since we updated today
     compinit -C
   fi
 }
 _compinit

# ─────────────────────────────────────────────
# 💻 [ALIASES]
# ─────────────────────────────────────────────
alias vim="nvim"
alias vi="nvim"
alias ls="eza"

eval "$(fzf --zsh)"

# ─────────────────────────────────────────────
# 🧩 [ZINIT SETUP]
# ─────────────────────────────────────────────
bindkey -e
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

alias zinit-update="zinit self-update && zinit update --all"

# REF: https://github.com/zdharma-continuum/zinit/discussions/312 zoxside(zi) And zinit(zi) in conflict. 
if alias zi &>/dev/null; then
    unalias zi
fi

# ─────────────────────────────────────────────
# 🌟 [ZSH PLUGINS]
# ─────────────────────────────────────────────

# pure prompt
zinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'
zinit light sindresorhus/pure
zstyle :prompt:pure:path color green

# zeno
export ZENO_HOME=~/.config/zeno
zinit ice lucid depth"1" blockf
zinit light yuki-yano/zeno.zsh

if [[ -n $ZENO_LOADED ]]; then
  bindkey ' ' zeno-auto-snippet
  # bindkey '^m' zeno-auto-snippet-and-accept-line
  bindkey '^i' zeno-completion
  # bindkey '^g' zeno-ghq-cd
  bindkey '^r' zeno-history-selection
  # bindkey '^x' zeno-insert-snippet
fi

# ─────────────────────────────────────────────
# 💻 [ZSH]
# ─────────────────────────────────────────────
setopt nolistbeep # ビープ音を鳴らさない
setopt auto_menu # 補完キー（Tab,  Ctrl+I) を連打するだけで順に補完候補を自動で補完する
setopt auto_param_slash # パラメータ展開時に末尾のスラッシュを自動で補完する
zstyle ':completion:*' list-colors di=34 fi=0 # 補完候補の色を設定
setopt HIST_NO_STORE # `history`コマンドは履歴に登録しない
setopt HIST_SAVE_NO_DUPS # 履歴ファイル（たとえば ~/.zsh_history）に同じ内容のコマンドを重複して保存しない 
setopt HIST_IGNORE_ALL_DUPS # コマンド履歴に追加する前に、すでに存在する同じコマンドがあれば削除してから追加する
setopt HIST_IGNORE_SPACE # 先頭にスペースを付けて実行したコマンドは履歴に残さない
setopt HIST_REDUCE_BLANKS # 複数のスペースを1つに圧縮して履歴に保存する
setopt SHARE_HISTORY # 複数の Zsh セッション（たとえば複数ターミナル）間で履歴をリアルタイムに共有する
setopt APPEND_HISTORY # セッション終了時、履歴ファイルを上書きせず末尾に追加する

# コマンドの補完リストの読み込み
fpath=(/opt/homebrew/share/zsh/site-functions $fpath)

# Setup aqua
# -----------------------------------------------------------------
export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"
export AQUA_GLOBAL_CONFIG="$HOME/.config/aqua/aqua.yaml"


export FZF_DEFAULT_OPTS='--height 40% --reverse --border --inline-info'
#
# # Setting fd as the default source for fzf
# export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix'
#
# export FZF_CTRL_T_OPTS="
#   --walker-skip .git,node_modules,target
#   --preview 'bat -n --color=always {}'
#   --bind 'ctrl-/:change-preview-window(down|hidden|)'"
#
# # To apply the command to CTRL-T as well
# export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Add PATH My Scripts
export PATH="$HOME/bin:$PATH"

# ADD PATH curl by Homebrew
export PATH="/opt/homebrew/opt/curl/bin:$PATH"

# https://volta.sh/
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# https://git-scm.com/book/ms/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Zsh
autoload bashcompinit && bashcompinit

# https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh

export PATH="$HOME/go/bin:$PATH"

bindkey -r "^G"
bindkey -r "^J"
bindkey "^[u" undo

eval "$(zoxide init zsh --hook prompt )"
eval "$(uv generate-shell-completion zsh)"
eval "$(mise activate zsh)"

WORK_ZSH="${HOME}/.zsh/work.zsh"
if [[ -f "${WORK_ZSH}" ]]; then
  source "${WORK_ZSH}"
fi

PRIVATE_ZSH="${HOME}/.zsh/private.zsh"
if [[ -f "${PRIVATE_ZSH}" ]]; then
  source "${PRIVATE_ZSH}"
fi
