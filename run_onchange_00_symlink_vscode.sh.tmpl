#!/bin/bash
set -eu

# 色定義
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
CYAN='\033[0;36m'
BOLD='\033[1m'
RESET='\033[0m'

# ログ関数（stderr）
print_section() {
    printf "${BOLD}${CYAN}==> %s${RESET}\n" "$1" >&2
}

print_success() {
    printf "${GREEN}✔ %s${RESET}\n" "$1" >&2
}

print_warn() {
    printf "${YELLOW}- %s${RESET}\n" "$1" >&2
}

print_error() {
    printf "${RED}✖ %s${RESET}\n" "$1" >&2
}

# ディレクトリ設定
VSCODE_USER_DIR="$HOME/Library/Application Support/Code/User"
CONFIG_DIR="$HOME/.config/vscode"

# VSCode が存在するか確認
if [ -d "$VSCODE_USER_DIR" ]; then
  print_section "VSCode configuration directory found. Creating symbolic link."

  create_symlink() {
    local target_file="$VSCODE_USER_DIR/$1"
    local source_file="$CONFIG_DIR/$1"

    if [ -e "$target_file" ] && [ ! -L "$target_file" ]; then
      rm "$target_file"
      ln -s "$source_file" "$target_file"
      print_success "$1: Deleted regular file and created a symbolic link"
    elif [ ! -e "$target_file" ]; then
      ln -s "$source_file" "$target_file"
      print_success "$1: Created a symbolic link"
    else
      print_warn "$1: A symbolic link already exists"
    fi
  }

  create_symlink "settings.json"
  create_symlink "keybindings.json"
else
  print_warn "VSCode config directory not found: $VSCODE_USER_DIR"
fi
